# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_";
}

# find shorthand
function f() {
    find . -name "$1" 2>&1 | grep -v 'Permission denied'
}

# Determine size of a file or total size of a directory
function fs() {
    if du -b /dev/null > /dev/null 2>&1; then
        local arg=-sbh;
    else
        local arg=-sh;
    fi
    if [[ -n "$@"  ]]; then
        du $arg -- "$@";
    else
        du $arg .[^.]* *;
    fi;
}

# Create a data URI from a file
function datauri() {
    local mimeType=$(file -b --mime-type "$1");
    if [[ $mimeType == text/*  ]]; then
        mimeType="${mimeType};charset=utf-8";
    fi
    echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

# Create a PHP server from a directory, optionally specifying the port
# (Requires PHP 5.4.0+.)
function server() {
    local port="${1:-8080}";
    sleep 1 && open "http://localhost:${port}/" &
    php -S "$localhost:${port}";
}

# `v` with no arguments opens the current directory in Vim, otherwise opens the
# given location
function v() {
    if [ $# -eq 0  ]; then
        vim .;
    else
        vim "$@";
    fi;
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first.
function tre() {
    tree -aC -I '.git' --dirsfirst "$@" | less -FRNX;
}

# Create useful .gitignore files for your project
function gi() {
    curl -L -s https://www.gitignore.io/api/$@ ;
}
